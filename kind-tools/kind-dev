#!/usr/bin/env bash

# kind-dev - Unified Kind cluster development tool
# Consolidates cluster creation, management, and GitOps integration

set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
CONFIG_DIR="$HOME/.kind-dev"
PROFILES_DIR="$SCRIPT_DIR/profiles"
SCRIPTS_DIR="$SCRIPT_DIR/scripts"
TEMPLATES_DIR="$SCRIPT_DIR/templates"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m'

# Logging
log_info() { echo -e "${BLUE}[INFO]${NC} $1"; }
log_success() { echo -e "${GREEN}[SUCCESS]${NC} $1"; }
log_warning() { echo -e "${YELLOW}[WARNING]${NC} $1"; }
log_error() { echo -e "${RED}[ERROR]${NC} $1"; }
log_header() { echo -e "${PURPLE}[KIND-DEV]${NC} $1"; }

# Initialize config directory
init_config_dir() {
    mkdir -p "$CONFIG_DIR"/{clusters,profiles,cache}
}

# Load profile configuration
load_profile() {
    local profile="$1"
    local profile_file="$PROFILES_DIR/$profile.yaml"
    
    if [ ! -f "$profile_file" ]; then
        log_error "Profile '$profile' not found at $profile_file"
        return 1
    fi
    
    log_info "Loading profile: $profile"
    export PROFILE_FILE="$profile_file"
    export PROFILE_NAME="$profile"
}

# Execute script from scripts directory
execute_script() {
    local script="$1"
    shift
    local script_file="$SCRIPTS_DIR/$script.sh"
    
    if [ ! -f "$script_file" ]; then
        log_error "Script '$script' not found at $script_file"
        return 1
    fi
    
    # Preserve environment variables when executing script (only pass if set)
    env ${PROFILE_FILE:+PROFILE_FILE="$PROFILE_FILE"} ${PROFILE_NAME:+PROFILE_NAME="$PROFILE_NAME"} bash "$script_file" "$@"
}

# Main commands
cmd_create() {
    local profile="${1:-basic}"
    local name="${2:-dev}"
    
    load_profile "$profile"
    execute_script "cluster-create" "$name"
}

cmd_delete() {
    local name="${1:-}"
    if [ -z "$name" ]; then
        log_error "Cluster name required"
        return 1
    fi
    
    execute_script "cluster-delete" "$name"
}

cmd_list() {
    execute_script "cluster-list"
}

cmd_switch() {
    local name="${1:-}"
    if [ -z "$name" ]; then
        log_error "Cluster name required"
        return 1
    fi
    
    execute_script "cluster-switch" "$name"
}

cmd_info() {
    local name="${1:-}"
    execute_script "cluster-info" "$name"
}

cmd_bootstrap() {
    local name="${1:-}"
    local repo="${2:-}"
    
    if [ -z "$name" ]; then
        log_error "Cluster name required"
        return 1
    fi
    
    execute_script "flux-bootstrap" "$name" "$repo"
}

cmd_profiles() {
    log_header "Available Profiles:"
    if [ -d "$PROFILES_DIR" ]; then
        for profile in "$PROFILES_DIR"/*.yaml; do
            if [ -f "$profile" ]; then
                local profile_name=$(basename "$profile" .yaml)
                local description=$(grep "^# Description:" "$profile" 2>/dev/null | cut -d' ' -f3- || echo "No description")
                printf "  %-15s %s\n" "$profile_name" "$description"
            fi
        done
    else
        log_warning "No profiles directory found"
    fi
}

cmd_validate() {
    local name="${1:-}"
    execute_script "cluster-validate" "$name"
}

cmd_suspend() {
    local name="${1:-}"
    if [ -z "$name" ]; then
        log_error "Cluster name required"
        return 1
    fi
    
    execute_script "cluster-suspend" "$name"
}

cmd_resume() {
    local name="${1:-}"
    if [ -z "$name" ]; then
        log_error "Cluster name required"
        return 1
    fi
    
    execute_script "cluster-resume" "$name"
}

# Usage
usage() {
    cat << EOF
kind-dev - Unified Kind cluster development tool

USAGE:
    kind-dev COMMAND [OPTIONS]

COMMANDS:
    create [PROFILE] [NAME]     Create cluster with profile (default: basic, dev)
    delete NAME                 Delete cluster
    list                        List all clusters
    switch NAME                 Switch kubectl context
    info [NAME]                 Show cluster info
    bootstrap NAME [REPO]       Bootstrap Flux GitOps
    profiles                    List available profiles
    validate [NAME]             Validate cluster configuration
    suspend NAME                Suspend cluster to save resources
    resume NAME                 Resume suspended cluster
    
PROFILES:
    basic       - Minimal cluster (default CNI)
    cilium      - Cluster with Cilium CNI
    storage     - Cluster with storage providers
    gitops      - Full GitOps-ready cluster
    homelab     - Homelab simulation cluster

EXAMPLES:
    kind-dev create                         # Create basic dev cluster
    kind-dev create cilium test-cilium      # Create Cilium cluster named test-cilium  
    kind-dev create gitops lab              # Create GitOps-ready cluster named lab
    kind-dev bootstrap lab                  # Bootstrap Flux on lab cluster
    kind-dev profiles                       # Show available profiles

EOF
}

# Main function
main() {
    init_config_dir
    
    case "${1:-}" in
        create)
            shift
            cmd_create "$@"
            ;;
        delete)
            shift
            cmd_delete "$@"
            ;;
        list)
            cmd_list
            ;;
        switch)
            shift
            cmd_switch "$@"
            ;;
        info)
            shift
            cmd_info "$@"
            ;;
        bootstrap)
            shift
            cmd_bootstrap "$@"
            ;;
        profiles)
            cmd_profiles
            ;;
        validate)
            shift
            cmd_validate "$@"
            ;;
        suspend)
            shift
            cmd_suspend "$@"
            ;;
        resume)
            shift
            cmd_resume "$@"
            ;;
        -h|--help|help)
            usage
            ;;
        *)
            log_error "Unknown command: ${1:-}"
            echo
            usage
            exit 1
            ;;
    esac
}

main "$@"