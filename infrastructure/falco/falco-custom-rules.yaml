apiVersion: v1
kind: ConfigMap
metadata:
  name: falco-custom-rules
  namespace: infra-falco
data:
  custom_rules.yaml: |
    # --------------------------------------------------------------------------------
    # 1. Shell Detection in Containers
    # --------------------------------------------------------------------------------
    - rule: Shell Spawned in Container
      desc: A shell was spawned in a container
      condition: >
        spawned_process and container and
        proc.name in (shell_binaries)
        and not k8s.ns.name in (kube-system, monitoring)
      output: >
        Shell spawned in container (user=%user.name container=%container.name 
        shell=%proc.name parent=%proc.pname cmdline=%proc.cmdline k8s.ns=%k8s.ns.name k8s.pod=%k8s.pod.name)
      priority: WARNING
      tags: [container, shell]

    # --------------------------------------------------------------------------------
    # 2. File Write Detection using available macros
    # --------------------------------------------------------------------------------
    - rule: Write to Etc Directory
      desc: Detect writes to /etc directory
      condition: >
        open_write and fd.name startswith /etc
        and not proc.name in (passwd_binaries, shadowutils_binaries)
        and not k8s.ns.name in (kube-system)
      output: >
        File in /etc opened for writing (user=%user.name command=%proc.cmdline 
        file=%fd.name k8s.ns=%k8s.ns.name k8s.pod=%k8s.pod.name)
      priority: ERROR
      tags: [filesystem]

    # --------------------------------------------------------------------------------
    # 3. Database Server Detection
    # --------------------------------------------------------------------------------
    - rule: Unexpected Database Server
      desc: Detect unexpected database server processes
      condition: >
        spawned_process and container and
        proc.name in (db_server_binaries, postgres_mgmt_binaries, nosql_server_binaries)
        and not k8s.ns.name in (kube-system, monitoring, database)
      output: >
        Unexpected database server started (user=%user.name container=%container.name 
        process=%proc.name cmdline=%proc.cmdline k8s.ns=%k8s.ns.name k8s.pod=%k8s.pod.name)
      priority: WARNING
      tags: [process, database]

    # --------------------------------------------------------------------------------
    # 4. HTTP Server Detection
    # --------------------------------------------------------------------------------
    - rule: Unexpected HTTP Server
      desc: Detect unexpected HTTP server processes
      condition: >
        spawned_process and container and
        proc.name in (http_server_binaries)
        and not k8s.ns.name in (kube-system, monitoring, ingress-nginx)
      output: >
        Unexpected HTTP server started (user=%user.name container=%container.name 
        process=%proc.name cmdline=%proc.cmdline k8s.ns=%k8s.ns.name k8s.pod=%k8s.pod.name)
      priority: NOTICE
      tags: [process, network]
